{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "masterPrefix": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Master node(s) name prefix"
      }
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of master VM instances (1,3 or 5)"
      },
      "allowedValues": [
        1,
        3,
        5
      ]
    },
    "masterSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "Master instance size"
      },
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_F1",
        "Standard_F2"
      ]
    },
    "agentPrefix": {
      "type": "string",
      "defaultValue": "agent"
    },
    "agentCount": {
      "type": "int",
      "metadata": {
        "description": "Number of agent VM instances (100 or less)."
      },
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100
    },
    "agentSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "Agent instance size"
      },
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_F1",
        "Standard_F2"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "cluster",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ssh public key for connecting to VMs."
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Base64 encoded, multi-line string to pass to Ubuntu cloud-init"
      }
    },
    "asFDCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Master Availability Set Fault Domains"
      }
    },
    "asUDCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Master Availability Set Update Domains"
      }
    },
    "saType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "saName": "[toLower(substring(concat(parameters('masterPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11))]",
    "saCount": 5,
    "saNameArray": [
      "[concat(toLower(substring(concat(parameters('agentPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11)), '0')]",
      "[concat(toLower(substring(concat(parameters('agentPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11)), '1')]",
      "[concat(toLower(substring(concat(parameters('agentPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11)), '2')]",
      "[concat(toLower(substring(concat(parameters('agentPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11)), '3')]",
      "[concat(toLower(substring(concat(parameters('agentPrefix'), 'sa',  uniqueString(resourceGroup().id)), 0, 11)), '4')]"
    ],
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 22
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('saName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('saType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('saNameArray')[copyIndex()]]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "storageLoop",
        "count": "[variables('saCount')]"
      },
      "properties": {
        "accountType": "[parameters('saType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "cluster",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/8"
          ]
        },
        "subnets": [
          {
            "name": "masters",
            "properties": {
              "addressPrefix": "10.1.0.0/16"
            }
          },
          {
            "name": "agents",
            "properties": {
              "addressPrefix": "10.2.0.0/16"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "copy": {
        "name": "masters",
        "count": "[parameters('masterCount')]"
      },
      "name": "[concat(parameters('masterPrefix'),copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "osProfile": {
          "computerName": "[concat(parameters('masterPrefix'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "customData": "[parameters('customData')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('masterSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('masterPrefix'),copyIndex())]",
            "vhd": {
              "uri": "[concat('https', '://', variables('saName'), '.blob.core.windows.net', concat('/vhds/', 'osdisk', copyIndex(),'.vhd'))]"
            },
            "createOption": "FromImage"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('masterPrefix'),copyIndex()))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'masters')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('masterPrefix'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', 'masters')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('saName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('agentPrefix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "storageLoop",
        "[concat('Microsoft.Network/loadBalancers/', parameters('agentPrefix'))]"
      ],
      "sku": {
        "name": "[parameters('agentSize')]",
        "tier": "Standard",
        "capacity": "[parameters('agentCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "[parameters('agentPrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "customData": "[parameters('customData')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPublicKey')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', variables('saNameArray')[0], '.blob.core.windows.net/', 'vhds')]",
                "[concat('https://', variables('saNameArray')[1], '.blob.core.windows.net/', 'vhds')]",
                "[concat('https://', variables('saNameArray')[2], '.blob.core.windows.net/', 'vhds')]",
                "[concat('https://', variables('saNameArray')[3], '.blob.core.windows.net/', 'vhds')]",
                "[concat('https://', variables('saNameArray')[4], '.blob.core.windows.net/', 'vhds')]"
              ],
              "name": "osdisk.vhd",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04.0-LTS",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[parameters('agentPrefix')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[concat(parameters('agentPrefix'),'IpConfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', 'cluster', '/subnets/', 'agents')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('agentPrefix'), '/backendAddressPools/', 'agentPool')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('agentPrefix'), '/inboundNatPools/', 'sshPool')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "masters",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[parameters('asFDCount')]",
        "platformUpdateDomainCount": "[parameters('asUDCount')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "copy": {
        "name": "clusterMasterNetworkInterfaces",
        "count": "[parameters('masterCount')]"
      },
      "name": "[concat(parameters('masterPrefix'),copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'cluster'), '/subnets/', 'masters')]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.1.0.',add(10,copyIndex()))]",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('masterPrefix'), copyIndex()))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('masterPrefix'), copyIndex()))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'cluster')]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('masterPrefix'), copyIndex())]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('masterPrefix'), copyIndex())]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('masterPrefix'), copyIndex())]",
      "copy": {
        "name": "clusterMasterPublicIPAddresses",
        "count": "[parameters('masterCount')]"
      },
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(resourceGroup().name, '-', parameters('masterPrefix'), copyIndex())]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('agentPrefix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(resourceGroup().name, '-', parameters('agentPrefix'),'-lb')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('agentPrefix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',parameters('agentPrefix'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('agentPrefix'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "agentPool"
          }
        ],
        "inboundNatPools": [
          {
            "name": "sshPool",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('agentPrefix')),'/frontendIPConfigurations/loadBalancerFrontEnd')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "httpRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('agentPrefix')),'/frontendIPConfigurations/loadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('agentPrefix')),'/backendAddressPools/agentPool')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('agentPrefix')),'/probes/tcpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 10,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "copy": {
        "name": "clusterMasterNetworkSecurityGroup",
        "count": "[parameters('masterCount')]"
      },
      "name": "[concat(parameters('masterPrefix'), copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-http",
            "properties": {
              "priority": 1001,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-https",
            "properties": {
              "priority": 1002,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-managment-http",
            "properties": {
              "priority": 1003,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "8080",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ]
}